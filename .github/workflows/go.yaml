name: Go

on:
  push:
    branches:
      - pipeline

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.29
          working-directory: api
  unit-test:
    strategy:
      matrix:
        go-version: [ 1.18.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v3
      - run: |
          cd api
          go test ./...
          cd ..
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '^1.18'
      - name: Build binary
        run: |
          pushd api/cmd/afiyet
          go mod tidy
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o main

          go build -o main
      - name: Deploy app
        env:
          OS_USER: ${{ secrets.OS_USER }}
          EC2_IP: ${{ secrets.EC2_IP }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: |
          export SSH_AUTH_SOCK=/tmp/ssh_agent.sock
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "$PRIVATE_KEY"
          scp api/cmd/afiyet/main $OS_USER@$EC2_IP:/home/ubuntu/main
          #sudo systemctl restart afiyet.service
